= TODO =



== List troubles ==



== List sub-troubles =



== Business rules ==



== session verification ==

all service are without authentication
a layer should be added between view (json) and services to handle authentication



= System operations =



== Register privileged user ==

pre-requisites: administration session, user type == administration || user type == technichan, regsitration must be not null, not empty, not already exist
input: user { registration, password, name, birth date, user type }
output: result message
post-requisites: user must be registred



== List users ==

pre-requisites: administration session
input: -
output: set of users { reg, name, birth date }
post-requisites: the set must be registred in the system



== Register laboratory ==

pre-requisites: administration session || technichan session, name must be not null, not empty, not already exist
input: laboratory { name }
output: result message
post-requisites: laboratory must be registred



== List laboratories ==

pre-requisites: user session
input: -
output: set of laboratories { name, num of computers }
post-requisites: the set must be registred in the system



== Register computer ==

pre-requisites: administration session || technichan session, asset code must be not null, not empty, not already exist, laboratory name must exist, position must be free, row and column numbers must be greather then 0, row number must be minor or equal 6
input: computer { asset code, position { laboratory { name }, row number, column number } }
output: result message
post-requisites: computer must be registred, position must be full



== List computers ==

pre-requisites: user session, laboratory name must be not null, not empty, not already exist
input: laboratory { name }
output: set of computers { asset code, position { row number, column number } }
post-requisites: the set must be registred in the system
