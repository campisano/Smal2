= TODO =



== List troubles ==



== List sub-troubles =



== Business rules ==



== session verification ==

* all service are without authentication
* a layer should be added between view (json) and services to handle authentication



== Error result ==

* the presenters are hiding exceptions, so the json response will be ever successful!
* http://localhost:8080/smal2/rest/user/register
* http://localhost:8080/smal2/rest/laboratory/register
* http://localhost:8080/smal2/rest/computer/list
* http://localhost:8080/smal2/rest/computer/register


= System operations =



== Register privileged user ==

* http://localhost:8080/smal2/rest/user/register

pre-requisites: administration session, user type == administration || user type == technichan, regsitration must be not null, not empty, not already exist
input: user { registration, password, name, birth_date, type }
output: result message
post-requisites: user must be registred



== List users ==

* http://localhost:8080/smal2/rest/user/list

pre-requisites: administration session
input: -
output: set of users { registration, name, type }
post-requisites: the set must be registred in the system



== Register laboratory ==

* http://localhost:8080/smal2/rest/laboratory/register

pre-requisites: administration session || technichan session, name must be not null, not empty, not already exist
input: laboratory { name }
output: result message
post-requisites: laboratory must be registred



== List laboratories ==

* http://localhost:8080/smal2/rest/laboratory/list

pre-requisites: user session
input: -
output: set of laboratories { name }
post-requisites: the set must be registred in the system



== Register computer ==

* http://localhost:8080/smal2/rest/computer/register

pre-requisites: administration session || technichan session, asset code must be not null, not empty, not already exist, laboratory name must exist, position must be free, row and column numbers must be greather then 0, row number must be minor or equal 6
input: computer { asset code, position { laboratory { name }, row_number, column_number } }
output: result message
post-requisites: computer must be registred, position must be full



== List computers ==

* http://localhost:8080/smal2/rest/computer/list

pre-requisites: user session, laboratory name must be not null, not empty, not already exist
input: laboratory { name }
output: set of computers { asset_code, position { row_number, column_number } }
post-requisites: the set must be registred in the system
